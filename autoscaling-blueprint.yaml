###########################################################
# This Blueprint installs the nodecellar application behind
# an haproxy instance on an openstack cloud environment.
###########################################################

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2m6/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2m6/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.2m6/plugin.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.yaml
#####################################################################################

inputs:

  image:
    description: >
      Image to be used when launching agent VM's

  flavor:
    description: >
      Flavor of the agent VM's

  agent_user:
    description: >
      User for connecting to agent VM's

node_types:

  ###########################################################
  # We define a type that inherits openstack's default
  # server, and adds monitoring capabillities on top of it.
  ###########################################################

  nodecellar.nodes.MonitoredServer:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      cloudify_agent:
        default:
          user: { get_input: agent_user }
      server:
        default:
          image: { get_input: image }
          flavor: { get_input: flavor }
    interfaces:

      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################

      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                default:
                  interval: 15
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall

      ###########################################################
      # Adding some collectors. These collectors are necessary
      # for the Cloudify UI to display the deafult metrics.
      ###########################################################

      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
              default:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}

  nodecellar.nodes.Scaler:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      nodes_to_scale:
        description: List of node names to perform autohealing on
        type: string
      service_name:
        description: Service name to try and scale by
        type: string
      threshold:
        description: An upper threshold for a reading on a specific instance
        type: float
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/healer/start-scaler.sh
          executor: central_deployment_agent
        stop:
          implementation: scripts/healer/stop-scaler.sh
          executor: central_deployment_agent

node_templates:

  ###########################################################
  # This node represents the management machine. We use it
  # in order to install nodes using the script plugin on the
  # management machine.
  ###########################################################

  manager:
    type: cloudify.nodes.Compute
    properties:
       install_agent: false

  cpu_scaler:
    type: nodecellar.nodes.Scaler
    relationships:
      - target: mongod_host
        type: cloudify.relationships.depends_on
      - target: manager
        type: cloudify.relationships.contained_in
    properties:
      nodes_to_scale:
        - mongod_host
      service_name: cpu_total_system
      threshold: 0.3

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
