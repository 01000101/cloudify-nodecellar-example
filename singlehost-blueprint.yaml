tosca_definitions_version: cloudify_dsl_1_0

imports:  
  - http://www.getcloudify.org/spec/cloudify/3.1rc1/types.yaml
  - nodecellar-types.yaml

################################################################
# Blueprint inputs.
# 
# The values are provided via the inputs.json file.
# passed when creating the deployment (-i inputs.json).
################################################################
inputs:

    host_ip:
        description: >
          The ip of the host the application will be deployed on  

    agent_user:
        description: >
          User name used when SSH-ing into the started machine

    agent_private_key_path:
        description: >
          Path to a private key that resided on the management machine.
          SSH-ing into agent machines will be done with this key.

node_templates:

  vm:
    type: cloudify.nodes.Compute
    properties:
      ip: { get_input: host_ip }
      cloudify_agent:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path }

  mongod:
    type: cloudify.nodes.nodecellar.MongoDatabase
    properties:
      role: mongod
      port: 27017
    relationships:
      - target: vm
        type: cloudify.relationships.contained_in

  nodejs:
    type: cloudify.nodes.nodecellar.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm

  nodecellar_app:
    type: cloudify.nodes.nodecellar.NodeJSApplicationModule
    properties:
      application_url: https://github.com/cloudify-cosmo/nodecellar/archive/master.zip
      port: 8080
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            process:
              description: A dictionary for process configuration.
              default:
                env:
                  MONGO_PORT: { get_property: [mongod, port] }
                  MONGO_HOST: { get_attribute: [mongod, ip_address] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs
      - type: cloudify.relationships.connected_to
        target: mongod

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_property: [ vm, ip ] }
      port: { get_property: [ nodecellar_app, base_port ] }



